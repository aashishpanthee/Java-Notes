********** FileWriter ******
We can use FileWriter to write character data to the file.

**** Contructors ****
i. FileWriter fw = new FileWriter(String fname);
ii. FileWriter fw = new FileWriter(File f);

Note: The above two(2) FileWriters meant for Over-riding of existing data.
      Instead of Over-riding , if we want append operation, then we have to create FileWriter by using the following below Contructors:

iii. FileWriter fw = new FileWriter(String name, boolean append);
iv. FileWriter fw = new FileWriter(File f, boolean append);

Note: If the specified file is not already available, then all the above Contructors will create that file.

***** Methods of FileWriter Class *****
i. write(int ch)
=> To write a single character.
  Eg: fw.write('a');
      fw.write(97);

ii. write(char[] ch)
=> To write an array of characters

iii. write(String s)
=> To write string to the file

iv. flush()
=> To give the guarantee that total data including lost characters will be written to the file.

v. close()
=> To close the writer.



********************************
Program:
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

public class Program {
  public static void main(String[] args) throws IOException {
    FileWriter fileWriter = new FileWriter(new File("File_I/O", "abc.txt"));
    fileWriter.write("Hello World");
    fileWriter.write("\n100");
    fileWriter.write("\n");
    char[] characters = { 'a', 'b', 'c' };
    fileWriter.write(characters);
    fileWriter.flush();
    fileWriter.close();
  }
}
In the above program, FileWriter can perform over-riding of existing data.
Instead of over-riding , if we want append operation then we have to create fileWriter object as follows:
Program:
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

public class Program {
  public static void main(String[] args) throws IOException {
    FileWriter fileWriter = new FileWriter(new File("File_I/O", "abc.txt"), true);
    fileWriter.write("Hello World");
    fileWriter.write("\n100");
    fileWriter.write("\n");
    char[] characters = { 'a', 'b', 'c' };
    fileWriter.write(characters);
    fileWriter.flush();
    fileWriter.close();
  }
}

NOTE: The main problem with the FileWriter is , we have to insert line separater ("\n") manually, which is varied from system to system.
      It is difficulty to the programmer.
      We can solve this problem by using BufferedWriter and PrintWriter classes.



